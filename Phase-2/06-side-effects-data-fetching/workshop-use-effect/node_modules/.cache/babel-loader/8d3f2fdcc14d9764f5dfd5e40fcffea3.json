{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Desktop/Lectures/repos/local/central-051721/phase-2/starter-code/06-side-effects-data-fetching-morning/workshop-use-effect/src/exercise/01.js\",\n    _s = $RefreshSig$();\n\n// âœ… on line 2, import the useEffect hook along with the useState hook\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [pics, setPics] = useState([]); // âœ… call the useEffect hook with a callback function and an empty array as a second argument\n  // ðŸ‘€ useEffect(() => {}, [])\n  // âœ… take all the code out from the handleFetchClick function, and put it inside the callback function in your useEffect\n  // ðŸ“ƒ Check out the docs for an example: https://reactjs.org/docs/faq-ajax.html#example-using-ajax-results-to-set-local-state\n  // ðŸ—‘ once your useEffect hook works, delete this function and also delete the <button> from the JSX\n\n  function handleFetchClick() {\n    console.log(\"Fetching data...\");\n    fetch(\"https://dog.ceo/api/breeds/image/random/8\").then(res => res.json()).then(data => {\n      console.log(\"Data fetched!\", data); // data is an object with a key of message, which has an array of images\n\n      setPics(data.message);\n    });\n  }\n\n  console.log(\"Component rendering\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"16px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dog Pics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DogPics, {\n      pics: pics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchClick,\n      children: \"Fetch!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n} // ðŸš« no need to touch the code for this component!\n\n\n_s(App, \"I5bTX73VEgwduGWbQK+RDJzcjCg=\");\n\n_c = App;\n\nfunction DogPics({\n  pics\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n      gap: \"16px\"\n    },\n    children: pics.map(pic => /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"100%\"\n      },\n      src: pic,\n      alt: \"A random dog from the internet\"\n    }, pic, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = DogPics;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"DogPics\");","map":{"version":3,"sources":["/Users/louis/Desktop/Lectures/repos/local/central-051721/phase-2/starter-code/06-side-effects-data-fetching-morning/workshop-use-effect/src/exercise/01.js"],"names":["useState","App","pics","setPics","handleFetchClick","console","log","fetch","then","res","json","data","message","padding","DogPics","display","gridTemplateColumns","gap","map","pic","width"],"mappings":";;;AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC,CADa,CAGb;AACA;AACA;AACA;AAEA;;AACA,WAASI,gBAAT,GAA4B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAC,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BK,IAA7B,EADY,CAEZ;;AACAR,MAAAA,OAAO,CAACQ,IAAI,CAACC,OAAN,CAAP;AACD,KANH;AAOD;;AAEDP,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEX;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;;;GA/BSH,G;;KAAAA,G;;AAiCT,SAASa,OAAT,CAAiB;AAAEZ,EAAAA;AAAF,CAAjB,EAA2B;AACzB,sBACE;AACE,IAAA,KAAK,EAAE;AACLa,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,mBAAmB,EAAE,sCAFhB;AAGLC,MAAAA,GAAG,EAAE;AAHA,KADT;AAAA,cAOGf,IAAI,CAACgB,GAAL,CAASC,GAAG,iBACX;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,GAAG,EAAED,GAHP;AAIE,MAAA,GAAG,EAAC;AAJN,OACOA,GADP;AAAA;AAAA;AAAA;AAAA,YADD;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;MAnBQL,O;AAqBT,eAAeb,GAAf","sourcesContent":["// âœ… on line 2, import the useEffect hook along with the useState hook\nimport { useState } from \"react\";\n\nfunction App() {\n  const [pics, setPics] = useState([]);\n\n  // âœ… call the useEffect hook with a callback function and an empty array as a second argument\n  // ðŸ‘€ useEffect(() => {}, [])\n  // âœ… take all the code out from the handleFetchClick function, and put it inside the callback function in your useEffect\n  // ðŸ“ƒ Check out the docs for an example: https://reactjs.org/docs/faq-ajax.html#example-using-ajax-results-to-set-local-state\n\n  // ðŸ—‘ once your useEffect hook works, delete this function and also delete the <button> from the JSX\n  function handleFetchClick() {\n    console.log(\"Fetching data...\");\n    fetch(\"https://dog.ceo/api/breeds/image/random/8\")\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"Data fetched!\", data);\n        // data is an object with a key of message, which has an array of images\n        setPics(data.message);\n      });\n  }\n\n  console.log(\"Component rendering\");\n\n  return (\n    <div style={{ padding: \"16px\" }}>\n      <h1>Dog Pics</h1>\n      <DogPics pics={pics} />\n      <button onClick={handleFetchClick}>Fetch!</button>\n    </div>\n  );\n}\n\n// ðŸš« no need to touch the code for this component!\n\nfunction DogPics({ pics }) {\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n        gap: \"16px\",\n      }}\n    >\n      {pics.map(pic => (\n        <img\n          key={pic}\n          style={{ width: \"100%\" }}\n          src={pic}\n          alt=\"A random dog from the internet\"\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}