"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ExternalLink = require("@styled-icons/heroicons-outline/ExternalLink");

var _reactRouterDom = require("react-router-dom");

var _templateObject;

function Sandbox(_ref) {
  var isVisible = _ref.isVisible,
      exerciseInfo = _ref.exerciseInfo;

  var _useParams = (0, _reactRouterDom.useParams)(),
      exerciseId = _useParams.exerciseId;

  var tabKey = "__workshop_app_sanbox_tab_".concat(exerciseId);

  var _useState = (0, _react.useState)("exercise"),
      _useState2 = (0, _slicedToArray2.default)(_useState, 2),
      selectedTab = _useState2[0],
      setSelectedTab = _useState2[1];

  var readme = exerciseInfo.readme,
      exercise = exerciseInfo.exercise,
      _exerciseInfo$solutio = exerciseInfo.solution,
      solution = _exerciseInfo$solutio === void 0 ? [] : _exerciseInfo$solutio;
  (0, _react.useEffect)(function () {
    var tab = localStorage.getItem(tabKey) || "exercise";
    setSelectedTab(tab);
  }, [tabKey]);
  (0, _react.useEffect)(function () {
    localStorage.setItem(tabKey, selectedTab);
  }, [tabKey, selectedTab]);
  var title = "".concat(readme.number, ". ").concat(readme.title);
  (0, _react.useEffect)(function () {
    if (document.title !== title) {
      document.title = title;
    }
  }, [title]);
  var sortedSolutions = (0, _toConsumableArray2.default)(solution).sort(function (a, b) {
    return a.extraCreditNumber - b.extraCreditNumber;
  });
  return /*#__PURE__*/_react.default.createElement(SandboxContainer, {
    isVisible: isVisible
  }, /*#__PURE__*/_react.default.createElement("nav", {
    role: "tablist"
  }, /*#__PURE__*/_react.default.createElement("button", {
    role: "tab",
    onClick: function onClick() {
      return setSelectedTab("exercise");
    },
    "aria-selected": selectedTab === "exercise" && "true",
    "aria-controls": "exercise",
    id: "tab-1"
  }, "Exercise"), sortedSolutions.length > 0 && /*#__PURE__*/_react.default.createElement("button", {
    role: "tab",
    onClick: function onClick() {
      return setSelectedTab("solution-".concat(sortedSolutions[0].extraCreditNumber));
    },
    "aria-selected": selectedTab.includes("solution") && "true",
    "aria-controls": "solution",
    id: "tab-2"
  }, "Solutions")), /*#__PURE__*/_react.default.createElement("div", {
    id: "exercise",
    role: "tabpanel",
    "aria-labelledby": "tab-1",
    hidden: selectedTab !== "exercise"
  }, /*#__PURE__*/_react.default.createElement("a", {
    href: exercise.isolatedPath,
    target: "_blank",
    rel: "noreferrer"
  }, /*#__PURE__*/_react.default.createElement(_ExternalLink.ExternalLink, {
    size: "20"
  }), " Open in new tab"), /*#__PURE__*/_react.default.createElement("iframe", {
    title: "".concat(readme.title, " Exercise"),
    src: exercise.isolatedPath
  })), /*#__PURE__*/_react.default.createElement("div", {
    id: "solution",
    role: "tabpanel",
    "aria-labelledby": "tab-2",
    hidden: !selectedTab.includes("solution")
  }, /*#__PURE__*/_react.default.createElement("nav", {
    role: "tablist"
  }, sortedSolutions.map(function (solution) {
    var id = "solution-".concat(solution.extraCreditNumber);
    return /*#__PURE__*/_react.default.createElement("button", {
      key: solution.extraCreditNumber,
      role: "tab",
      onClick: function onClick() {
        return setSelectedTab(id);
      },
      "aria-selected": selectedTab === id && "true",
      "aria-controls": id,
      id: "tab-solution-".concat(solution.extraCreditNumber)
    }, solution.isExtraCredit ? "Extra Credit ".concat(solution.extraCreditNumber) : "Exercise Solution");
  })), sortedSolutions.map(function (solution) {
    return /*#__PURE__*/_react.default.createElement("div", {
      key: solution.extraCreditNumber,
      id: "solution-".concat(solution.extraCreditNumber),
      role: "tabpanel",
      "aria-labelledby": "tab-solution-".concat(solution.extraCreditNumber),
      hidden: selectedTab !== "solution-".concat(solution.extraCreditNumber)
    }, /*#__PURE__*/_react.default.createElement("a", {
      href: solution.isolatedPath,
      target: "_blank",
      rel: "noreferrer"
    }, /*#__PURE__*/_react.default.createElement(_ExternalLink.ExternalLink, {
      size: "20"
    }), " Open in new tab"), /*#__PURE__*/_react.default.createElement("iframe", {
      title: "".concat(readme.title, " Solution ").concat(solution.extraCreditNumber),
      src: solution.isolatedPath
    }));
  })));
}

var SandboxContainer = _styledComponents.default.section(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2.default)(["\n  display: ", ";\n  grid-template-rows: auto 1fr;\n\n  nav {\n    background: var(--background-primary);\n  }\n\n  nav button {\n    outline: none;\n    padding: 1rem;\n    background: var(--background-primary);\n    border: none;\n    border-bottom: 2px solid var(--background-secondary-light);\n    color: var(--font-color);\n    cursor: pointer;\n  }\n\n  nav button[aria-selected=\"true\"] {\n    background: var(--background-secondary-light);\n    border-bottom: 2px solid var(--color-primary);\n    color: var(--color-primary);\n  }\n\n  [role=\"tabpanel\"]:not([hidden]) {\n    display: grid;\n    grid-template-rows: auto 1fr;\n    height: 100%;\n  }\n\n  [role=\"tabpanel\"] a {\n    display: flex;\n    padding: 1rem;\n    background: var(--background-secondary-light);\n    justify-content: flex-end;\n  }\n\n  [role=\"tabpanel\"] nav {\n    background: var(--background-secondary);\n  }\n\n  [role=\"tabpanel\"] nav button {\n    background: var(--background-secondary);\n  }\n\n  [role=\"tabpanel\"] nav button {\n    border-bottom: 2px solid var(--background-secondary);\n  }\n\n  [role=\"tabpanel\"] nav button[aria-selected=\"true\"] {\n    background: var(--background-secondary-light);\n    border-bottom: 2px solid var(--color-primary);\n    color: var(--color-primary);\n  }\n\n  iframe {\n    border: none;\n    width: 100%;\n    height: 100%;\n    background-color: white;\n  }\n"])), function (_ref2) {
  var isVisible = _ref2.isVisible;
  return isVisible ? "grid" : "none";
});

var _default = Sandbox;
exports.default = _default;