{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Desktop/Lectures/repos/local/SENG-LIVE-062821/Phase-2/03-state-and-events/paintr-app/src/components/Button.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Button({\n  name,\n  visibilityHandler\n}) {\n  _s();\n\n  // Define an isToggled State to take over\n  // the work of isAdded and isLiked\n  const [isToggled, setToggled] = useState(false); // Create Callback Function to modify \"isToggled\" state\n  // as well as to modify the \"isToggled\" state in Painting.js\n\n  function handleVisibility() {\n    setToggled(!isToggled); // If visibilityHandler() is passed, we invoke it\n\n    if (visibilityHandler) {\n      visibilityHandler();\n    }\n\n    ;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: name === \"cart\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVisibility,\n      children: isToggled ? \"Remove From Cart\" : \"Add To Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVisibility,\n      children: isToggled ? \"Liked\" : \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Button, \"hIOrJLxUaKcdsdRav0hUVUPHZzI=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/louis/Desktop/Lectures/repos/local/SENG-LIVE-062821/Phase-2/03-state-and-events/paintr-app/src/components/Button.js"],"names":["useState","Button","name","visibilityHandler","isToggled","setToggled","handleVisibility"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAhB,EAA6C;AAAA;;AAEzC;AACA;AACA,QAAM,CAAEC,SAAF,EAAaC,UAAb,IAA4BL,QAAQ,CAAC,KAAD,CAA1C,CAJyC,CAMzC;AACA;;AACA,WAASM,gBAAT,GAA4B;AACxBD,IAAAA,UAAU,CAAC,CAACD,SAAF,CAAV,CADwB,CAGxB;;AACA,QAAID,iBAAJ,EAAuB;AAACA,MAAAA,iBAAiB;AAAG;;AAAA;AAC/C;;AAED,sBACI;AAAA,cACKD,IAAI,KAAK,MAAT,gBACG;AAAQ,MAAA,OAAO,EAAEI,gBAAjB;AAAA,gBACMF,SAAS,GAAG,kBAAH,GAAwB;AADvC;AAAA;AAAA;AAAA;AAAA,YADH,gBAKG;AAAQ,MAAA,OAAO,EAAEE,gBAAjB;AAAA,gBACMF,SAAS,GAAG,OAAH,GAAa;AAD5B;AAAA;AAAA;AAAA;AAAA;AANR,mBADJ;AAaH;;GA5BQH,M;;KAAAA,M;AA8BT,eAAeA,MAAf","sourcesContent":["import { useState } from 'react';\n\nfunction Button({ name, visibilityHandler }) {\n    \n    // Define an isToggled State to take over\n    // the work of isAdded and isLiked\n    const [ isToggled, setToggled ] = useState(false);\n\n    // Create Callback Function to modify \"isToggled\" state\n    // as well as to modify the \"isToggled\" state in Painting.js\n    function handleVisibility() {\n        setToggled(!isToggled);\n\n        // If visibilityHandler() is passed, we invoke it\n        if (visibilityHandler) {visibilityHandler()};\n    }\n\n    return (\n        <>\n            {name === \"cart\" ? (\n                <button onClick={handleVisibility}>\n                    { isToggled ? \"Remove From Cart\" : \"Add To Cart\"}\n                </button>\n            ) : (\n                <button onClick={handleVisibility}>\n                    { isToggled ? \"Liked\" : \"Like\"}\n                </button>\n            )}\n        </>\n    );\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}