{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Desktop/Lectures/repos/local/SENG-LIVE-062821/Phase-2/03-state-and-events/paintr-app/src/components/Button.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Button({\n  name\n}) {\n  _s();\n\n  // Define an isToggled State to take over\n  // the work of isAdded and isLiked\n  const [isToggled, setToggled] = useState(false);\n\n  function setButton(name) {\n    if (name === \"cart\") {\n      {\n        isToggled ? \"Remove From Cart\" : \"Add To Cart\";\n      }\n    } else {\n      {\n        isToggled ? \"Liked\" : \"Like\";\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setToggled(!isToggled),\n    children: [isToggled ? \"Remove From Cart\" : \"Add To Cart\", isToggled ? \"Liked\" : \"Like\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Button, \"hIOrJLxUaKcdsdRav0hUVUPHZzI=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/louis/Desktop/Lectures/repos/local/SENG-LIVE-062821/Phase-2/03-state-and-events/paintr-app/src/components/Button.js"],"names":["useState","Button","name","isToggled","setToggled","setButton"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA0B;AAAA;;AACtB;AACA;AAEA,QAAM,CAAEC,SAAF,EAAaC,UAAb,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASK,SAAT,CAAmBH,IAAnB,EAAyB;AACrB,QAAIA,IAAI,KAAK,MAAb,EAAsB;AAClB;AAAEC,QAAAA,SAAS,GAAG,kBAAH,GAAwB,aAAjC;AAA+C;AACpD,KAFD,MAEO;AACH;AAAEA,QAAAA,SAAS,GAAG,OAAH,GAAa,MAAtB;AAA6B;AAClC;AACJ;;AAED,sBACI;AAAQ,IAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,CAACD,SAAF,CAAjC;AAAA,eACIA,SAAS,GAAG,kBAAH,GAAwB,aADrC,EAEIA,SAAS,GAAG,OAAH,GAAa,MAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GApBQF,M;;KAAAA,M;AAsBT,eAAeA,MAAf","sourcesContent":["import { useState } from 'react';\n\nfunction Button({ name }) {\n    // Define an isToggled State to take over\n    // the work of isAdded and isLiked\n\n    const [ isToggled, setToggled ] = useState(false);\n    \n    function setButton(name) {\n        if (name === \"cart\" ) {\n            { isToggled ? \"Remove From Cart\" : \"Add To Cart\"}\n        } else {\n            { isToggled ? \"Liked\" : \"Like\"}\n        }\n    }\n\n    return (\n        <button onClick={() => setToggled(!isToggled)}>\n          { isToggled ? \"Remove From Cart\" : \"Add To Cart\"}\n          { isToggled ? \"Liked\" : \"Like\"}\n        </button>\n    );\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}