{"ast":null,"code":"var _jsxFileName = \"/Users/louis/Desktop/Lectures/repos/local/central-051721/phase-2/starter-code/04-react-data-flow-afternoon/paintr-app/src/App.js\",\n    _s = $RefreshSig$();\n\n// 1. Add functionality to our App such that as we add votes,\n//    our App will continue to order our paintings by number\n//    of votes.\n// --------------------------------------\n// https://semantic-ui.com/\nimport 'semantic-ui-css/semantic.min.css'; // import all data from \"painting_data.js\"\n\nimport paintingsData from './painting_data'; // import useState Hook\n\nimport React, { useState } from 'react'; // Compontent Imports\n\nimport NavBar from './NavBar';\nimport PaintingsList from './PaintingsList';\nimport PaintingForm from './PaintingForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // console.log(paintingsData);\n  // Initialize \"color\", \"paintings\", and \"formView\" states\n  const [color, colorSetter] = useState(\"red\");\n  const [paintings, paintingsSetter] = useState(paintingsData);\n  const [formView, formViewSetter] = useState(false); // Create function to change Parent's \"color\" state (changeColor)\n\n  function changeColor(newColor) {\n    // here, we want to call our paintingSetter function\n    // to change the value of our \"color\" state\n    colorSetter(newColor);\n  } // Breakout Activity #1: Create Function to Toggle Between PaintingForm / PaintingsList (toggleForm)\n  // ...\n\n\n  function toggleForm() {\n    formViewSetter(!formView);\n  } // // Function to handle setting new values for \"paintings\" state\n\n\n  function sortPaintings() {\n    paintings.map(painting => {\n      console.log();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      color: color,\n      title: \"Paintr\",\n      icon: \"paint brush\",\n      description: \"an app we made\" // Pass changeColor() as prop to NavBar\n      ,\n      changeColor: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleForm,\n      children: \"Show/Hide New Painting Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), formView ? /*#__PURE__*/_jsxDEV(PaintingForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(PaintingsList, {\n      paintings: paintings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CsOolrA3m8Xeh6HAsYcWT3UVUsQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/louis/Desktop/Lectures/repos/local/central-051721/phase-2/starter-code/04-react-data-flow-afternoon/paintr-app/src/App.js"],"names":["paintingsData","React","useState","NavBar","PaintingsList","PaintingForm","App","color","colorSetter","paintings","paintingsSetter","formView","formViewSetter","changeColor","newColor","toggleForm","sortPaintings","map","painting","console","log"],"mappings":";;;AAAA;AACA;AACA;AAEA;AAEA;AACA,OAAO,kCAAP,C,CAEA;;AACA,OAAOA,aAAP,MAA0B,iBAA1B,C,CAEA;;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb;AAEA;AACA,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBN,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACO,SAAD,EAAYC,eAAZ,IAA+BR,QAAQ,CAACF,aAAD,CAA7C;AACA,QAAM,CAACW,QAAD,EAAWC,cAAX,IAA6BV,QAAQ,CAAC,KAAD,CAA3C,CAPa,CASb;;AACA,WAASW,WAAT,CAAqBC,QAArB,EAA+B;AAE7B;AACA;AACAN,IAAAA,WAAW,CAACM,QAAD,CAAX;AACD,GAfY,CAiBb;AACA;;;AACA,WAASC,UAAT,GAAsB;AACpBH,IAAAA,cAAc,CAAC,CAACD,QAAF,CAAd;AACD,GArBY,CAuBb;;;AACA,WAASK,aAAT,GAAyB;AACvBP,IAAAA,SAAS,CAACQ,GAAV,CAAcC,QAAQ,IAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR;AACD,KAFD;AAGD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAEb,KADT;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,IAAI,EAAC,aAHP;AAIE,MAAA,WAAW,EAAC,gBAJd,CAME;AANF;AAOE,MAAA,WAAW,EAAEM;AAPf;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAQ,MAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAA;AAAA;AAAA;AAAA,YAbF,EAiBIJ,QAAQ,gBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAsB,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEF;AAA1B;AAAA;AAAA;AAAA;AAAA,YAjBlC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAnDQH,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["// 1. Add functionality to our App such that as we add votes,\n//    our App will continue to order our paintings by number\n//    of votes.\n\n// --------------------------------------\n\n// https://semantic-ui.com/\nimport 'semantic-ui-css/semantic.min.css';\n\n// import all data from \"painting_data.js\"\nimport paintingsData from './painting_data';\n\n// import useState Hook\nimport React, { useState } from 'react';\n\n// Compontent Imports\nimport NavBar from './NavBar';\nimport PaintingsList from './PaintingsList';\nimport PaintingForm from './PaintingForm';\n\nfunction App() {\n\n  // console.log(paintingsData);\n\n  // Initialize \"color\", \"paintings\", and \"formView\" states\n  const [color, colorSetter] = useState(\"red\");\n  const [paintings, paintingsSetter] = useState(paintingsData);\n  const [formView, formViewSetter] = useState(false);\n\n  // Create function to change Parent's \"color\" state (changeColor)\n  function changeColor(newColor) {\n    \n    // here, we want to call our paintingSetter function\n    // to change the value of our \"color\" state\n    colorSetter(newColor);\n  }\n\n  // Breakout Activity #1: Create Function to Toggle Between PaintingForm / PaintingsList (toggleForm)\n  // ...\n  function toggleForm() {\n    formViewSetter(!formView);\n  }\n\n  // // Function to handle setting new values for \"paintings\" state\n  function sortPaintings() {\n    paintings.map(painting => {\n      console.log()\n    }); \n  }\n\n  return (\n    <div>\n      <NavBar\n        color={color}\n        title=\"Paintr\"\n        icon=\"paint brush\"\n        description=\"an app we made\"\n\n        // Pass changeColor() as prop to NavBar\n        changeColor={changeColor}\n      />\n\n      {/* Add toggleForm click behavior */}\n      <button onClick={toggleForm}>Show/Hide New Painting Form</button>\n      <hr />\n\n      {/* Breakout Activity #1: Render PaintingForm or PaintingsList Components based upon the new formView state value */}\n      \n      { formView ? <PaintingForm /> : <PaintingsList paintings={paintings} /> }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}